(Note: the following information is in dutch, for an english version of this
document open the README file.)

KlaverjasAIChallenge is een game engine voor het spel klaverjas die het
mogelijk maakt om verschillende AI's (Kunstmatige intelligentie) tegen elkaar
te laten klaverjassen.

Hier volgt nuttige informatie tot het programmeren van een Klaverjas AI:
- Source code van het project kan uitgecheckt worden met Mercurial dmv het
  volgende command:
  hg clone https://klaverjasaichallenge.googlecode.com/hg/ klaverjasaichallenge
- In de package src/org/klaverjasaichallange/ai staat een voorbeeld AI, om te
  laten zien hoe een AI geimplementeerd zou kunnen worden.
- De AI moet de KlaverJasAI interface implementeren (te vinden in de shared
  package). 
- De AI mag niet met z'n teammate communiceren over welke kaarten hij heeft
  enzovoort.
- De AI mag niet valsspelen, als dit wel gebeurt zal de engine crashen
  met eend RuntimeException.
- Alle AI's moeten worden gecompileerd als jar file en vervolgens in de lib/ai
  directory geplaatst worden.
- De package shared bevat alle klassen die je in je AI mag gebruiken. Deze
  kan afzonderlijk van de rest van de klaverjas engine gecompileerd worden.
  Ant zal dit standaard doen als onderdeel van de 'distribution' task.

Nog wat handige links over de spelregels van het Klaverjassen:
- http://nl.wikipedia.org/wiki/Klaverjassen

Een begrippenlijst die van toepassing is op het spel:
Trump = troef.
Trick = slag. oftewel 4 kaarten, van iedere speler 1.
Round = ronde. oftewel 8 tricks (slagen)
Game = 16 ronden.
Rank = de kaartwaarde (heer, vrouw, tien etc.)
Suit = de kaartkleur (schoppen, ruiten etc.)
Hand = de kaarten die de speler in z'n hand heeft (aan het begin van een Round
zijn dat er 8.)
Ruleset = de spelregelset die gebruikt wordt (Rotterdams, Amsterdams). Op dit
moment is alleen Rotterdams klaverjassen geimplementeerd.
Team = 2 spelers die samenwerken. Zij zitten altijd tegenover elkaar en zullen
nooit achter elkaar aan de beurt zijn.
CheatException = Zal optreden als je verzaakt.
Order = Een wrapper op int om aan te geven wat de volgorde van bv een kaart
is. (Zo zal de zeven van niet-troef de laagst mogelijke order hebben). Hoe
hoger de order hoe beter de kaart.
