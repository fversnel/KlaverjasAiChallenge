(Note: the following information is in dutch, for an english version of this
readme document you can open the README file.)

Wat betreft het schrijven van een klaverjas AI voor de klaverjasaichallenge
app (website: http://code.google.com/p/klaverjasaichallenge/), hier wat
nuttige informatie:

- Je kunt de source code uitchecken door middel van svn: svn checkout
  http://klaverjasaichallenge.googlecode.com/svn/trunk/
klaverjasaichallenge-read-only
- In de package src/org/klaverjasaichallange/ai staat een voorbeeld AI, zodat
  je een kunt zien hoe het een beetje werkt.
- De AI moet de KlaverJasAI interface implementeren.
- De AI mag niet met z'n teammate communiceren over welke kaarten hij heeft etc.
- De AI mag niet valsspelen, als ie dit wel doet dan zal de applicatie crashen
  met een CheatException.
- Alle AI's moeten worden gecompileerd als jar file en vervolgens in de lib
  directory geplaatst worden.
- De package shared bevat alle klassen die je in je AI mag gebruiken.

Nog wat handige links:
http://nl.wikipedia.org/wiki/Klaverjassen
http://en.wikipedia.org/wiki/Klaverjas

En een woordenlijst:
Trump = troef.
Trick = slag. oftewel 4 kaarten, van iedere speler 1.
Round = ronde. oftewel 8 tricks (slagen)
Game = 16 ronden.
Rank = de kaartwaarde (heer, vrouw, tien etc.)
Suit = de kaartkleur (schoppen, ruiten etc.)
Hand = de kaarten die de speler in z'n hand heeft (aan het begin van een Round
zijn dat er 8.)
Ruleset = de spelregelset die gebruikt wordt (Rotterdams, Amsterdams). Op dit
moment is alleen Rotterdams klaverjassen geimplementeerd.
Team = 2 spelers die samenwerken. Zij zitten altijd tegenover elkaar en zullen
nooit achter elkaar aan de beurt zijn.
CheatException = Zal optreden als je verzaakt.
Order = Een wrapper op int om aan te geven wat de volgorde van bv een kaart
is. (Zo zal de zeven van niet-troef de laagst mogelijke order hebben). Hoe
hoger de order hoe beter de kaart.
